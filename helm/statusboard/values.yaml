# Default values for statusboard.

replicaCount:
  backend: 1
  frontend: 1
  mariadb: 1
image:
  backend:
    repository: diamini/statusboard-backend
    tag: 0.1.0
    pullPolicy: IfNotPresent
  frontend:
    repository: diamini/statusboard-frontend
    tag: 0.1.0
    pullPolicy: IfNotPresent
  mariadb:
    repository: mariadb
    tag: 11.8
    pullPolicy: IfNotPresent
service:
  type: ClusterIP
  backend:
    port: 8080
  frontend:
    port: 80
    nodePort: 30080
  mariadb:
    port: 3306
env:
  backend:
    SPRING_DATASOURCE_URL: "jdbc:mariadb://statusboard-mariadb:3306/status_board"
    SPRING_DATASOURCE_USERNAME: "root"
    SPRING_DATASOURCE_PASSWORD: "root"
    SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    SPRING_PROFILES_ACTIVE: "dev"
  frontend:
    VUE_APP_BACKEND_URL: "/api"
  mariadb:
    rootPassword: "root"
    database: "status_board"
secret:
  db:
    username: "root"
    password: "root"
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
namespace: statusboard
ingress:
  enabled: true
  host: "chart-example.local" # 실제 curl 요청 host와 맞춰야 함
  className: "nginx"
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
metricsServer:
  serviceAccount:
    name: metrics-server
  clusterRole:
    name: system:metrics-server
    aggregatedReaderName: system:aggregated-metrics-reader
  roleBinding:
    name: metrics-server-auth-reader
  clusterRoleBinding:
    authDelegator: metrics-server:system:auth-delegator
    metricsServer: system:metrics-server
  service:
    name: metrics-server
  deployment:
    name: metrics-server
  image:
    repository: registry.k8s.io/metrics-server/metrics-server
    tag: v0.8.0
    pullPolicy: IfNotPresent
backend:
  image:
    tag: dev-latest
monitoring:
  prometheus:
    enabled: true
    annotations:
      scrape: "true"
      path: "/actuator/prometheus"
      port: "8080"
monitoring:
  prometheus:
    enabled: true
    annotations:
      scrape: "true"
      path: "/actuator/prometheus"
      port: "8080"
